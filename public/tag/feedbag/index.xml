<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Feedbag on David Moreno blog</title>
    <link>https://damog.net/blog/tag/feedbag/</link>
    <description>Recent content in Feedbag on David Moreno blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 Mar 2012 10:55:10 +0000</lastBuildDate>
    
	<atom:link href="https://damog.net/blog/tag/feedbag/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Feedbag released under MIT license</title>
      <link>https://damog.net/blog/2012/03/16/feedbag-released-under-mit-license/</link>
      <pubDate>Fri, 16 Mar 2012 10:55:10 +0000</pubDate>
      
      <guid>https://damog.net/blog/2012/03/16/feedbag-released-under-mit-license/</guid>
      <description>I was contacted by Pivotal Labs regarding licensing of Feedbag. I guess releasing open source software as GPL only makes sense if you continue to live under a rock. I&amp;rsquo;ve bumped the version to 0.9 and released it under MIT license.
Feedbag 1.0, which I plan to work on during the following days will bring in a brand new shiny backend powered by Nokogiri, instead of Hpricot (I mean, give me a break, I&amp;rsquo;m trying to catch up with the Ruby community, after all I&amp;rsquo;m primarily a Perl guy :D) and hopefully I will be able to recreate most of the feed auto-discovery test suite that Mark Pilgrim retired (410 Gone) when he committed infosuicide.</description>
    </item>
    
    <item>
      <title>Feedbag 0.6</title>
      <link>https://damog.net/blog/2010/03/05/feedbag-0.6/</link>
      <pubDate>Fri, 05 Mar 2010 20:36:59 +0000</pubDate>
      
      <guid>https://damog.net/blog/2010/03/05/feedbag-0.6/</guid>
      <description>I just uploaded Feedbag 0.6 to Gemcutter and GitHub.
Just a couple of small nice additions to this version:
 The undocumented args[:narrow] option has been disabled until further notice. A nice little commit from one of Feedbag&amp;rsquo;s forks, by Patrick Reagan. Added an executable to find feed URLs directly.  Sometimes you need to find the feed for a URL quickly, not from a script. What I do, and what someone else showed me too, is this:</description>
    </item>
    
    <item>
      <title>Feedbag significantly faster than Rfeedfinder</title>
      <link>https://damog.net/blog/2009/03/07/feedbag-significantly-faster-than-rfeedfinder/</link>
      <pubDate>Sat, 07 Mar 2009 16:57:45 +0000</pubDate>
      
      <guid>https://damog.net/blog/2009/03/07/feedbag-significantly-faster-than-rfeedfinder/</guid>
      <description>Alright so Feedbag looks to be significantly faster than Rfeedfinder when tested against different URIs:
 user system total real damog.net: feedbag 0.280000 0.050000 0.330000 ( 1.486712) rfeedfinder 0.140000 0.030000 0.170000 ( 4.259612) http://cnn.com: feedbag 0.200000 0.020000 0.220000 ( 0.703625) rfeedfinder 0.240000 0.030000 0.270000 ( 1.071508) scripting.com: feedbag 0.170000 0.030000 0.200000 ( 0.682292) rfeedfinder 0.220000 0.040000 0.260000 ( 1.668234) mx.planetalinux.org: feedbag 0.550000 0.050000 0.600000 ( 1.636884) rfeedfinder 0.760000 0.120000 0.880000 ( 3.</description>
    </item>
    
    <item>
      <title>Feedbag now using feedvalidator</title>
      <link>https://damog.net/blog/2009/02/11/feedbag-now-using-feedvalidator/</link>
      <pubDate>Wed, 11 Feb 2009 16:00:53 +0000</pubDate>
      
      <guid>https://damog.net/blog/2009/02/11/feedbag-now-using-feedvalidator/</guid>
      <description>There&amp;rsquo;s a very special case that I hadn&amp;rsquo;t spotted on Feedbag. Within the different methods that Feedbag uses to discover the feed on a given URL, the very first one is lookup on a table of &amp;ldquo;known&amp;rdquo; content types. If the alleged feed is served with any of the following content types, then Feedbag just returns that same URL as it assumes it&amp;rsquo;s the feed: @content_types = [ &amp;lsquo;application/x.atom+xml&amp;rsquo;, &amp;lsquo;application/atom+xml&amp;rsquo;, &amp;lsquo;application/xml&amp;rsquo;, &amp;lsquo;text/xml&amp;rsquo;, &amp;lsquo;application/rss+xml&amp;rsquo;, &amp;lsquo;application/rdf+xml&amp;rsquo;, ] However, what happens if the feed is not served with any of those but it&amp;rsquo;s a valid feed?</description>
    </item>
    
    <item>
      <title>Introducing Feedbag: Feed auto-discovery Ruby library/tool</title>
      <link>https://damog.net/blog/2008/12/30/introducing-feedbag-feed-auto-discovery-ruby-library/tool/</link>
      <pubDate>Tue, 30 Dec 2008 18:58:10 +0000</pubDate>
      
      <guid>https://damog.net/blog/2008/12/30/introducing-feedbag-feed-auto-discovery-ruby-library/tool/</guid>
      <description>Last week, I spent some time building a good (that I liked) feed auto-discovery tool to use in Ruby for other project I&amp;rsquo;m building, rFeed. I liked CPAN&amp;rsquo;s Feed::Find, and at some point I made a wrapper class to run a Perl script using such module, however, I wasn&amp;rsquo;t happy by mixing it all. So, Feedbag was born:
&amp;gt;&amp;gt; require &amp;quot;rubygems&amp;quot; =&amp;gt; true &amp;gt;&amp;gt; require &amp;quot;feedbag&amp;quot; =&amp;gt; true &amp;gt;&amp;gt; Feedbag.find &amp;quot;damog.</description>
    </item>
    
  </channel>
</rss>